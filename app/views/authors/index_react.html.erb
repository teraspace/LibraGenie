<div id="authors-list-react"></div>

<script>
(function() {
  'use strict';

  function initAuthorsList() {
    console.log('‚úçÔ∏è AuthorsList React loading...');

    function renderAuthorsList() {
      var container = document.getElementById('authors-list-react');

      // Silently return if not on authors page - this is normal
      if (!container) {
        return;
      }

      if (!window.React || !window.ReactDOM || !window.AuthorsList) {
        console.error('‚ùå Required React components not loaded');
        console.log('Available components:', {
          React: !!window.React,
          ReactDOM: !!window.ReactDOM,
          AuthorsList: !!window.AuthorsList
        });
        container.innerHTML = '<div class="p-4 bg-red-100 border border-red-400 rounded"><h3>‚ùå React AuthorsList component failed to load</h3><p>Please refresh the page.</p></div>';
        return;
      }

      try {
        console.log('‚úÖ Creating AuthorsList element...');
        var element = window.React.createElement(window.AuthorsList, {});

        if (typeof window.createRoot === 'function') {
          console.log('üì¶ Using React 19+ createRoot');
          var root = window.createRoot(container);
          root.render(element);
        } else if (window.ReactDOM && typeof window.ReactDOM.createRoot === 'function') {
          console.log('üì¶ Using ReactDOM.createRoot');
          var root = window.ReactDOM.createRoot(container);
          root.render(element);
        } else if (window.ReactDOM && typeof window.ReactDOM.render === 'function') {
          console.log('üì¶ Using legacy ReactDOM.render');
          window.ReactDOM.render(element, container);
        } else {
          throw new Error('No React rendering method available');
        }

        console.log('‚úÖ AuthorsList rendered successfully');
      } catch (error) {
        console.error('‚ùå Error rendering AuthorsList:', error);
        container.innerHTML = '<div class="p-4 bg-red-100 border border-red-400 rounded"><h3>‚ùå Error rendering component</h3><p>' + error.message + '</p></div>';
      }
    }

    // Check if we're on the authors page before initializing
    if (!document.getElementById('authors-list-react')) {
      return; // Not on authors page, exit silently
    }

    // Check if React is loaded
    if (typeof window.React === 'undefined') {
      console.log('üîÑ Waiting for React to load...');
      setTimeout(initAuthorsList, 100);
      return;
    }

    renderAuthorsList();
  }

  // Initialize when DOM is ready or on Turbo navigation
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initAuthorsList);
  } else {
    initAuthorsList();
  }

  // Also listen for Turbo navigation
  document.addEventListener('turbo:load', initAuthorsList);
})();
</script>
