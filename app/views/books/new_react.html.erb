<div id="book-form-new"></div>

<script>
  function initializeBookForm() {
    // Only run if we're on the book form page
    const container = document.getElementById('book-form-new');
    if (!container) {
      // Silently return if container doesn't exist (we're not on the book form page)
      return;
    }

    // Check if already initialized to prevent duplicates
    if (container.hasAttribute('data-book-form-initialized')) {
      console.log('🔄 BookForm already initialized, skipping...');
      return;
    }

    console.log('🚀 BookForm React loading...');

    // Debug: Check what's available in window
    console.log('Available React components:', {
      React: !!window.React,
      ReactDOM: !!window.ReactDOM,
      createRoot: !!window.createRoot,
      BookFormAdvanced: !!window.BookFormAdvanced,
      renderReactComponent: !!window.renderReactComponent
    });

    // Check if React and components are available
    if (!window.React) {
      console.error('❌ React not loaded');
      return;
    }

    if (!window.BookFormAdvanced) {
      console.error('❌ BookFormAdvanced component not loaded');
      console.log('Available window properties:', Object.keys(window).filter(key => key.includes('Book')));
      return;
    }

    if (!window.renderReactComponent) {
      console.error('❌ renderReactComponent helper not loaded');
      return;
    }

    console.log('✅ All dependencies loaded, fetching form data...');

    // Fetch data for the form
    fetch('/books/new.json', {
      credentials: 'same-origin',  // Include cookies for authentication
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      }
    })
      .then(response => {
        console.log('📡 Response status:', response.status);
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        console.log('📋 Form data loaded:', data);

        // Create React component
        const element = React.createElement(BookFormAdvanced, {
          book: data.book,
          authors: data.authors,
          categories: data.categories,
          isEdit: false
        });

        console.log('⚛️ React element created:', element);

        // Render using our helper function
        console.log('📦 Container found:', !!container);

        // Wait for ReactRootManager to be available
        if (window.ReactRootManager) {
          window.renderReactComponent(element, container, 'BookFormAdvanced');
          console.log('✅ BookFormAdvanced component rendered successfully');
        } else {
          console.log('⏳ ReactRootManager not yet available, using fallback');
          if (window.renderReactComponent) {
            window.renderReactComponent(element, container, 'BookFormAdvanced');
            console.log('✅ BookFormAdvanced component rendered successfully (fallback)');
          } else {
            console.error('❌ Neither ReactRootManager nor renderReactComponent available');
            return;
          }
        }

        // Mark as initialized
        container.setAttribute('data-book-form-initialized', 'true');
      })
      .catch(error => {
        console.error('💥 Error loading form data:', error);

        // Show error message to user - but only if we're on the right page
        if (container) {
          container.innerHTML = `
            <div class="bg-red-50 border border-red-200 rounded-md p-4">
              <h3 class="text-red-800 font-medium">Error loading form</h3>
              <p class="mt-2 text-red-700 text-sm">${error.message}</p>
              <p class="mt-2 text-red-700 text-sm">Please try refreshing the page or go back to <a href="/books" class="underline">Books List</a></p>
            </div>
          `;
        }
      });
  }

  // Initialize on DOMContentLoaded
  document.addEventListener('DOMContentLoaded', initializeBookForm);

  // Initialize on Turbo events for better compatibility
  document.addEventListener('turbo:load', initializeBookForm);
  document.addEventListener('turbo:render', initializeBookForm);
</script>
